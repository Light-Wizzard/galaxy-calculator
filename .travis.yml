sudo: false
language: cpp
branches:
  only:
    - master

jobs:
  include:
    - os: linux
      dist: xenial
      sudo: require
      compiler: gcc
      addons:
        apt:
          sources:
            - sourceline: ppa:ubuntu-toolchain-r/test
            - sourceline: ppa:beineri/opt-qt-5.14.1-xenial
          packages:
            - binutils
            - g++-7
            - libgl1-mesa-dev
            - libxkbcommon-x11-0
            - zlib1g-dev
            - libzstd-dev
            - p7zip-full  
            - g++-7
            - git
      env:
        - APPIMAGE="true"
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - QT_BEINERI_VERSION="5.14.1";
    - os: linux
      dist: xenial
      sudo: require
      services: docker
      env: WEBASM="true"
    - os: osx
      osx_image: xcode11.0
      compiler: clang
      env:
        - DMG="true"
        - MATRIX_EVAL="COMPILER=clang++"

install:
    - if [ -n "${DMG}" ]; then 
        echo "Download last version of Qt with brew for Mac";
        brew update > /dev/null; 
        brew install qt5; 
        chmod -R 755 /usr/local/opt/qt5/*; 
        export QTDIR="/usr/local/opt/qt5"; export PATH="${QTDIR}/bin:$PATH"; export ARTIFACT="${BIN_PRO_RES_NAME}*.dmg"; 
      fi
      
script:
    - eval "${MATRIX_EVAL}"
    - if [ -n "${APPIMAGE}" ]; then bash tools/build-with-qmake.sh; fi
    - if [ -n "${DMG}" ]; then
        echo "Build project for Mac in /home/travis/build/[secure]/${BIN_PRO_RES_NAME}";
        mkdir build && cd build;
        qmake ..;
        make;
        echo "Run macdeployqt";
        macdeployqt "${BIN_PRO_RES_NAME}.app/" -qmldir=../qml -dmg;
        find . | grep dmg;
      fi
    - if [ -n "${WEBASM}" ]; then
        echo "Build WEBASM in /home/travis/build/[secure]/${BIN_PRO_RES_NAME}";
        git remote set-url origin https://${GITHUB_TOKEN}@github.com/${GITHUB_USERNAME}/${BIN_PRO_RES_NAME};
        git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*";
        git fetch --all;
        git config --global user.name "${GITHUB_USERNAME}";
        git config --global user.email "${GITHUB_EMAIL}";
        echo "WEBASM make build folder and run docker";
        mkdir build;
        docker run --rm -v "${PWD}:/project/source" -v "${PWD}/build:/project/build" maukalinow/qtwasm_builder:${QT_WASM_VER};
        rm -rf build/{Makefile,*.o,*.cpp};
        git checkout --track origin/gh-pages;
        mv -v build/* .;
        rm -rf build;
        sudo mv -v "${BIN_PRO_RES_NAME}.html" index.html;
        echo "Created WEBASM";
        ls -lh;
        git add --all;
        git commit -sm "Update WebAssembly";
      fi    

after_success:
    - if [ "${TRAVIS_PULL_REQUEST}" != false ] || [ "${TRAVIS_BRANCH}" != "master" ]; then
        echo "This is not the master branch, no deploy will be done"; travis_terminate 0;
      fi
    - wget -c https://raw.githubusercontent.com/${GITHUB_USERNAME}/${BIN_PRO_RES_NAME}/master/tools/upload.sh;
    - if [ -n "${APPIMAGE}" ] && [ -f "${ARTIFACT_APPIMAGE}" ];   then bash ./upload.sh "${ARTIFACT_APPIMAGE}"; fi
    - if [ -n "${APPIMAGE}" ] && [ -f "${ARTIFACT_ZSYNC}" ];      then bash ./upload.sh "${ARTIFACT_ZSYNC}"; fi
    - if [ -n "${APPIMAGE}" ] && [ -f "${ARTIFACT_QIF}" ];        then bash ./upload.sh "${ARTIFACT_QIF}"; fi
    - if [ -n "${DMG}" ]; then bash ./upload.sh "$ARTIFACT"; fi
    - if [ -n "${WEBASM}" ]; then git push origin gh-pages; fi
    
