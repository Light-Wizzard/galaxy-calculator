language: cpp
branches:
  only:
    - master
env:
  global:
    - BIN=galaxy-calculator
    - secure: "drLCd1qFj12SGLlynkHXaZtSBuDBHtSMFAFe0Krx7bVrPO5a9RqNavi3VBjxz88+x/72MIeRrGkYLDCbn/RHHnznbc/UQiFk8WXNr/3/p5IwE56ee/vZfRor67Be21fPb6PuKCqbaZWkAtVBy6slvc1hvdfk5F4yJIkFUW8wjhEtsbq+tAdzW83jNXjpawdx4C9QkUTuwhg51pgvQjxfEAN2lAZxay2xPN/JxW1jcfYNuGvS36P/ahWONlZVmHdEcNVMEcMycpa2JHyhkeQSdCr/bNl6gJKMnGdcCGnz5C6HXcsk6vXjxWWc0nVXWMRZxmZ1tEr5CpXpO9cbMVdIACDPjwBp22b+TR5vhKlSEBxTB3GCLik/68jwSaMMS0KklaO5VfK+fiwoUB4r4jJdIjUDEzj7lS8pai9loHv0hxMRPAJezg+TNetjUtAXCYeBvjv5xaGviclPx0f0yXPTdtqiL5xvaOGRFVoQEb6KufBO9j7pqfLVFyczK8qGsIpbrWvHeXgJdoEdk5tQyDE4SfhDvdN3TNb+ktY2hsjMeX/PUdjkTgD42pREgne3aXUoAGbo20gVQLQfvxFgz5aqV7l5nCtW5HZ8WeTk8g3ilGGM51rr/u9wdcMurhn2YouAVGMRMJ3cHCDQuNltMmbjHj6D/RAHvsmViqoDhsEp7CY="

# I get a warning without them, and two extra jobs with them, comment out.
#os:
#  - linux
#  - osx

#dist: xenial

jobs:
  include:
    - os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - sourceline: ppa:ubuntu-toolchain-r/test
            - sourceline: ppa:beineri/opt-qt-5.12.6-xenial
          packages:
            - g++-7
            - git
      env:
        - APPIMAGE="true"
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      dist: xenial
      services: docker
      env: WEBASM="true"
    - os: osx
      osx_image: xcode10.1
      compiler: clang
      env:
        - DMG="true"
        - MATRIX_EVAL="COMPILER=clang++"
        
install:
    - if [ ! -z "${APPIMAGE}" ]; then 
        export QTV=qt512; 
        sudo apt update -qq; 
        echo "Install qt libraries"; 
        sudo apt install build-essential ${QTV}base ${QTV}quickcontrols ${QTV}quickcontrols2 ${QTV}graphicaleffects ${QTV}svg ${QTV}scxml libgl1-mesa-dev; 
        export ARTIFACT="$BIN*.AppImage";
      fi
    - if [ ! -z "${DMG}" ]; then 
        echo "Download last version of Qt with brew"; 
        brew update > /dev/null; 
        brew install qt5; 
        chmod -R 755 /usr/local/opt/qt5/*; 
        export QTDIR="/usr/local/opt/qt5"; export PATH="${QTDIR}/bin:$PATH"; export ARTIFACT="${BIN}*.dmg"; 
      fi
      
script:
    - export GITHUB_TOKEN="${github_token}"
    - eval "${MATRIX_EVAL}"
    - if [ ! -z "${APPIMAGE}" ]; then 
        echo "Load Qt env"; 
        source /opt/qt*/bin/qt*-env.sh;
        echo "Build project in folder=/home/travis/build/[secure]/galaxy-calculator/build/deploy/build"; 
        mkdir build && cd build; 
        qmake ..; make; 
        echo "Create deploy folder=/home/travis/build/[secure]/galaxy-calculator/build/deploy/build/deploy";
        mkdir deploy; 
        cp "../deploy/${BIN}.png" deploy/;
        cp "../deploy/${BIN}.desktop" deploy/; 
        ls;
        mv "$BIN" deploy/; 
        echo "Donwload and run linuxdeployqt continuous..."; 
        wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage";
        chmod a+x linuxdeployqt*.AppImage; 
        unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH;
        mkdir -p deploy/usr/share/doc/libc6/; cp /usr/share/doc/libc6/copyright deploy/usr/share/doc/libc6/copyright;
        ./linuxdeployqt*.AppImage "deploy/${BIN}.desktop" -bundle-non-qt-libs -extra-plugins=iconengines,imageformats -verbose=2 -qmldir=../qml -appimage; 
        ls;
        echo "Galaxy-Calculator-d71a8e5-x86_64.AppImage and Galaxy-Calculator-d71a8e5-x86_64.AppImage.zsync"
        mv Galaxy-Calculator*.AppImage "${BIN}.AppImage"; 
        mv Galaxy-Calculator*.AppImage.zsync "${BIN}.AppImage.zsync"; 
      fi    
    - if [ ! -z "${DMG}" ]; then 
        echo "Build project"; 
        mkdir build && cd build; 
        qmake ..; make; 
        echo "Run macdeployqt"; 
        macdeployqt "${BIN}.app/" -qmldir=../qml -dmg; 
        ls;
        find . | grep dmg; 
      fi
    - if [ ! -z "${WEBASM}" ]; then 
        git remote set-url origin https://${GITHUB_TOKEN}@github.com/Light-Wizzard/galaxy-calculator;
        git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"; 
        git fetch --all; git config --global user.name "Light-Wizzard"; 
        git config --global user.email "thelightwizzard@gmail.com"; 
        echo "Build project"; 
        mkdir build; 
        docker run --rm -v "${PWD}:/project/source" -v "${PWD}/build:/project/build" maukalinow/qtwasm_builder:5.13_latest;
        rm -rf build/{Makefile,*.o,*.cpp}; 
        git checkout --track origin/gh-pages; 
        mv build/* .; 
        rm -rf build; 
        ls;
        sudo mv "${BIN}.html" index.html; 
        git add --all; 
        git commit -sm "Update WebAssembly"; 
      fi

before_deploy:
    - git config --local user.name "Light-Wizzard"
    - git config --local user.email "thelightwizzard@gmail.com"
    - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
    - git tag $TRAVIS_TAG

deploy:
  - provider: releases
    token: "${GITHUB_TOKEN}"
    file:
      - "${BIN}.AppImage"
      - "${BIN}.AppImage.zsync"
      - "index.html"
      - "${BIN}.dmg"
# End of File

